[
  { "CurrentState": 1, "Label": "int", "StateStack": null, "NextState": 2, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 1, "Label": "float", "StateStack": null, "NextState": 2, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 1, "Label": "double", "StateStack": null, "NextState": 2, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 2, "Label": "id", "StateStack": null, "NextState": 3, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 3, "Label": ",", "StateStack": null, "NextState": 2, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 3, "Label": ";", "StateStack": null, "NextState": 1, "SemanticSubroutine": "[!=]error" },
  { "CurrentState": 3, "Label": "{", "StateStack": 4, "NextState": 7, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 4, "Label": ";", "StateStack": null, "NextState": 5, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 5, "Label": "}", "StateStack": null, "NextState": 6, "SemanticSubroutine": "[!=] Next:7,Stack:4" },
 	{ "CurrentState": 6, "Label": null, "StateStack": null, "NextState": null, "SemanticSubroutine": "[!=]exit" },
 	{ "CurrentState": 7, "Label": "if", "StateStack": null, "NextState": 8, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 7, "Label": "id", "StateStack": null, "NextState": 9, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 7, "Label": "cin", "StateStack": null, "NextState": 11, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 7, "Label": "cout", "StateStack": null, "NextState": 14, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 7, "Label": "for", "StateStack": null, "NextState": 17, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 8, "Label": "(", "StateStack": 22, "NextState": 27, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 9, "Label": "=", "StateStack": 10, "NextState": 30, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 10, "Label": null, "StateStack": null, "NextState": null, "SemanticSubroutine": "[!=]exit" },
 	{ "CurrentState": 11, "Label": "<<", "StateStack": null, "NextState": 12, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 12, "Label": "id", "StateStack": null, "NextState": 13, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 13, "Label": "<<", "StateStack": null, "NextState": 12, "SemanticSubroutine": "[!=]exit" },
 	{ "CurrentState": 14, "Label": ">>", "StateStack": null, "NextState": 15, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 15, "Label": "id", "StateStack": null, "NextState": 16, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 16, "Label": ">>", "StateStack": null, "NextState": 15, "SemanticSubroutine": "[!=]exit" },
 	{ "CurrentState": 17, "Label": "(", "StateStack": null, "NextState": 18, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 18, "Label": "id", "StateStack": null, "NextState": 19, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 19, "Label": "=", "StateStack": 20, "NextState": 30, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 20, "Label": ";", "StateStack": 21, "NextState": 27, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 21, "Label": ";", "StateStack": 22, "NextState": 30, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 22, "Label": ")", "StateStack": null, "NextState": 23, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 23, "Label": "{", "StateStack": 24, "NextState": 7, "SemanticSubroutine": "[!=] Next:7,Stack:26" },
 	{ "CurrentState": 24, "Label": ";", "StateStack": null, "NextState": 25, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 25, "Label": "}", "StateStack": null, "NextState": 26, "SemanticSubroutine": "[!=] Next:7,Stack:24" },
 	{ "CurrentState": 26, "Label": null, "StateStack": null, "NextState": null, "SemanticSubroutine": "[!=]exit" },
 	{ "CurrentState": 27, "Label": "true", "StateStack": null, "NextState": 28, "SemanticSubroutine": "[!=] Next:30,Stack:29" },
 	{ "CurrentState": 27, "Label": "false", "StateStack": null, "NextState": 28, "SemanticSubroutine": "[!=] Next:30,Stack:29" },
 	{ "CurrentState": 29, "Label": "<", "StateStack": 28, "NextState": 30, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 29, "Label": ">", "StateStack": 28, "NextState": 30, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 29, "Label": "<=", "StateStack": 28, "NextState": 30, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 29, "Label": ">=", "StateStack": 28, "NextState": 30, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 29, "Label": "!=", "StateStack": 28, "NextState": 30, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 29, "Label": "==", "StateStack": 28, "NextState": 30, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 28, "Label": null, "StateStack": null, "NextState": null, "SemanticSubroutine": "[!=]exit" },
 	{ "CurrentState": 30, "Label": "id", "StateStack": null, "NextState": 31, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 30, "Label": "con", "StateStack": null, "NextState": 31, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 30, "Label": "(", "StateStack": 32, "NextState": 30, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 30, "Label": "-", "StateStack": 31, "NextState": 30, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 32, "Label": ")", "StateStack": null, "NextState": 31, "SemanticSubroutine": "[!=]error" },
 	{ "CurrentState": 31, "Label": "+", "StateStack": null, "NextState": 30, "SemanticSubroutine": "[!=]exit" },
 	{ "CurrentState": 31, "Label": "-", "StateStack": null, "NextState": 30, "SemanticSubroutine": "[!=]exit" },
 	{ "CurrentState": 31, "Label": "*", "StateStack": null, "NextState": 30, "SemanticSubroutine": "[!=]exit" },
 	{ "CurrentState": 31, "Label": "/", "StateStack": null, "NextState": 30, "SemanticSubroutine": "[!=]exit" }
]